\ Copyright (c) 2020-2021, Stefan Selariu

include "./LibC.code"

define String = struct {
    data: [u8; ?] = malloc(16usize) as [u8; ?]
    data_size: usize = 16
    length: usize = 0
}

define append = func (self: String, char: u8) -> String {
    if (self.length + 1 >= self.data_size) {
        self.data_size = self.data_size + 16
        self.data = realloc(self.data, self.data_size) as [u8; ?]
    }
    self.data[self.length] = char
    self.length = self.length + 1
    self.data[self.length] = 0u8
    return self
}

define for_each_char = macro (self: String, handler: macro (char: u8)) {
    let index = 0
    let length = self.length as i32
    while (index < length) {
        handler(self.data[index])
        index = index + 1
    }
}
