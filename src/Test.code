rfib :: (n: Int) -> Int {
	if (n < 2) {
		return n
	}
	return rfib(n - 1) + rfib(n - 2)
}

lfib :: (n: Int) -> Int {
	if (n < 2) {
		return n
	}
	v_0 := 0
	v_1 := 1
	v_i := v_0 + v_1
	i := 2
	loop {
		if (i == n) {
			return v_i
		}
		v_0 = v_1
		v_1 = v_i
		v_i = v_0 + v_1
		i = i + 1
	}
}

main :: () {
	i := 0
	loop {
		if (i < 25 && lfib(i) == rfib(i) || i == 25) {
			i = i + 1
		} else {
			break
		}
	}
	return i
}
