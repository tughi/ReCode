func write(self: @FILE, string: @String) -> @FILE {
    return self.write(string.data)
}

include "../lang/String.code"

func write(file: @FILE, chars: [i8; ?]) -> @FILE {
    let index = 0isize
    loop {
        let char = chars[index]
        if (char == '\0') {
            return file
        }
        file.write(char)
        index = index + 1
    }
}

func write(file: @FILE, number: i32) -> @FILE {
    if (number < 0) {
        return file.write('-').write(-number)
    }
    if (number >= 10) {
        file.write(number / 10)
    }
    fputc(number // 10 + '0' as i32, file)
    return file
}

func write(file: @FILE, number: isize) -> @FILE {
    if (number < 0) {
        return file.write('-').write(-number)
    }
    if (number >= 10) {
        file.write(number / 10)
    }
    return file.write((number // 10) as i8 + '0')
}

func write(file: @FILE, char: i8) -> @FILE {
    fputc(char as i32, file)
    return file
}

func end_line(file: @FILE) -> @FILE {
    return file.write('\n')
}

define FILE = unknown struct

external stdout: @FILE

external func fputc(char: i32, file: @FILE) -> i32
