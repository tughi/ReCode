type FILE = opaque

$main(%argc: i32, %argv: ptr<ptr<u8>>) {
@1:
  [ %argv %argc $stdout ]
  %argc.ptr: ptr<i32> = alloc i32
  [ %argc.ptr %argv %argc $stdout ]
  store %argc.ptr %argc
  [ %argc.ptr %argv $stdout ]
  %argv.ptr: ptr<ptr<ptr<u8>>> = alloc ptr<ptr<u8>>
  [ %argc.ptr %argv.ptr %argv $stdout ]
  store %argv.ptr %argv
  [ %argc.ptr $stdout ]
  %argc.1: i32 = load %argc.ptr
  [ %argc.1 $stdout ]
  %1: i32 = const 2
  [ %argc.1 %1 $stdout ]
  %2: bool = cmp_ne %argc.1 %1
  [ %2 $stdout ]
  br %2 @2 @3
  [ $stdout ]
@2:
  [ ]
  %3: i32 = const 1
  [ %3 ]
  call $exit %3
  [ ]
@3:
  [ $stdout ]
  %4: u8 = const '2'
  [ %4 $stdout ]
  %5: ptr<FILE> = load $stdout
  [ %4 %5 ]
  %6: i32 = call $fputc %4 %5
  [ ]
  ret
  [ ]
}

external $stdout: ptr<FILE>

$fputc(%c: u8, %file: ptr<FILE>): i32

$exit(%code: i32)
