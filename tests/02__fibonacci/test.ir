$main(): i32 {
@1:
   [ ]
   %1: i32 = const 12
   [ %1 ]
   %2: i32 = call $fibonacci %1
   [ %2 ]
   %3: i32 = const 144
   [ %2 %3 ]
   %4: i32 = sub %2 %3
   [ %4 ]
   ret %4
   [ ]
}

$fibonacci(%n: i32): i32 {
@1:
   [ %n ]
   %n.ptr: ptr<i32> = alloc i32
   [ %n.ptr %n ]
   store %n.ptr %n
   [ %n.ptr ]
   %n.1: i32 = load %n.ptr
   [ %n.1 %n.ptr ]
   %1: i32 = const 1
   [ %n.1 %1 %n.ptr ]
   %2: bool = cmp_le %n.1 %1
   [ %2 %n.ptr ]
   br %2 @2 @3
   [ %n.ptr ]
@2:
   [ %n.ptr ]
   %n.2: i32 = load %n.ptr
   [ %n.2 ]
   ret %n.2
   [ ]
@3:
   [ %n.ptr ]
   %n.3: i32 = load %n.ptr
   [ %n.ptr %n.3 ]
   %3: i32 = const 1
   [ %n.ptr %n.3 %3 ]
   %4: i32 = sub %n.3 %3
   [ %n.ptr %4 ]
   %5: i32 = call $fibonacci %4
   [ %5 %n.ptr ]
   %n.4: i32 = load %n.ptr
   [ %5 %n.4 ]
   %6: i32 = const 2
   [ %5 %n.4 %6 ]
   %7: i32 = sub %n.4 %6
   [ %5 %7 ]
   %8: i32 = call $fibonacci %7
   [ %5 %8 ]
   %9: i32 = add %5 %8
   [ %9 ]
   ret %9
   [ ]
}
