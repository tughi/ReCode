$main(): i32 {
@1:
   [ ]
   %1: i32 = const 12
   [ %1 ]
   %2: i32 = call $fibonacci %1
   [ %2 ]
   %3: i32 = const 144
   [ %2 %3 ]
   %4: i32 = sub %2 %3
   [ %4 ]
   ret %4
   [ ]
}

$fibonacci(%n: i32): i32 {
@1:
   [ %n ]
   %n.ptr: ptr<i32> = alloc i32
   [ %n.ptr %n ]
   store %n.ptr %n
   [ %n.ptr ]
   %n.1: i32 = load %n.ptr
   [ %n.1 %n.ptr ]
   %1: i32 = const 1
   [ %n.1 %1 %n.ptr ]
   %2: bool = cmp_le %n.1 %1
   [ %2 %n.ptr ]
   br %2 @2 @3
   [ %n.ptr ]
@2:
   [ %n.ptr ]
   %n.2: i32 = load %n.ptr
   [ %n.2 ]
   ret %n.2
   [ ]
@3:
   [ %n.ptr ]
   %v1.ptr: ptr<i32> = alloc i32
   [ %v1.ptr %n.ptr ]
   %3: i32 = const 0
   [ %v1.ptr %3 %n.ptr ]
   store %v1.ptr %3
   [ %n.ptr %v1.ptr ]
   %v2.ptr: ptr<i32> = alloc i32
   [ %v2.ptr %n.ptr %v1.ptr ]
   %4: i32 = const 1
   [ %v2.ptr %4 %n.ptr %v1.ptr ]
   store %v2.ptr %4
   [ %n.ptr %v2.ptr %v1.ptr ]
   %i.ptr: ptr<i32> = alloc i32
   [ %i.ptr %n.ptr %v2.ptr %v1.ptr ]
   %5: i32 = const 2
   [ %i.ptr %5 %n.ptr %v2.ptr %v1.ptr ]
   store %i.ptr %5
   [ %n.ptr %i.ptr %v2.ptr %v1.ptr ]
   jmp @4
   [ %n.ptr %i.ptr %v2.ptr %v1.ptr ]
@4:
   [ %n.ptr %i.ptr %v2.ptr %v1.ptr ]
   %i.1: i32 = load %i.ptr
   [ %i.1 %n.ptr %i.ptr %v2.ptr %v1.ptr ]
   %n.3: i32 = load %n.ptr
   [ %i.1 %n.3 %n.ptr %i.ptr %v2.ptr %v1.ptr ]
   %6: bool = cmp_le %i.1 %n.3
   [ %6 %n.ptr %i.ptr %v2.ptr %v1.ptr ]
   br %6 @5 @6
   [ %n.ptr %i.ptr %v2.ptr %v1.ptr ]
@5:
   [ %n.ptr %i.ptr %v2.ptr %v1.ptr ]
   %v3.ptr: ptr<i32> = alloc i32
   [ %n.ptr %i.ptr %v2.ptr %v3.ptr %v1.ptr ]
   %v1.1: i32 = load %v1.ptr
   [ %n.ptr %i.ptr %v2.ptr %v3.ptr %v1.ptr %v1.1 ]
   %v2.1: i32 = load %v2.ptr
   [ %n.ptr %i.ptr %v2.ptr %v3.ptr %v1.ptr %v1.1 %v2.1 ]
   %7: i32 = add %v1.1 %v2.1
   [ %n.ptr %i.ptr %v2.ptr %v3.ptr %v1.ptr %7 ]
   store %v3.ptr %7
   [ %n.ptr %i.ptr %v2.ptr %v3.ptr %v1.ptr ]
   %v2.2: i32 = load %v2.ptr
   [ %n.ptr %i.ptr %v2.ptr %v3.ptr %v1.ptr %v2.2 ]
   store %v1.ptr %v2.2
   [ %n.ptr %i.ptr %v2.ptr %v3.ptr %v1.ptr ]
   %v3.1: i32 = load %v3.ptr
   [ %n.ptr %i.ptr %v2.ptr %v3.1 %v1.ptr ]
   store %v2.ptr %v3.1
   [ %n.ptr %i.ptr %v2.ptr %v1.ptr ]
   %i.2: i32 = load %i.ptr
   [ %n.ptr %i.ptr %i.2 %v2.ptr %v1.ptr ]
   %8: i32 = const 1
   [ %n.ptr %i.ptr %i.2 %8 %v2.ptr %v1.ptr ]
   %9: i32 = add %i.2 %8
   [ %n.ptr %i.ptr %9 %v2.ptr %v1.ptr ]
   store %i.ptr %9
   [ %n.ptr %i.ptr %v2.ptr %v1.ptr ]
   jmp @4
   [ %n.ptr %i.ptr %v2.ptr %v1.ptr ]
@6:
   [ %v2.ptr ]
   %v2.3: i32 = load %v2.ptr
   [ %v2.3 ]
   ret %v2.3
   [ ]
}
