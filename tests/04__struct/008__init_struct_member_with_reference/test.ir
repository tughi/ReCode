type Number = struct {
  value: i32
  next: ptr<Number>
}

$main(): i32 {
@1:
  [ ]
  %third.ptr: ptr<Number> = alloc Number
  [ %third.ptr ]
  %1: i32 = const 43
  [ %third.ptr %1 ]
  %2: Number = struct { Number.value: %1 }
  [ %third.ptr %1 ]
  %3: ptr<i32> = offset %third.ptr Number.value
  [ %third.ptr %3 %1 ]
  store %3 %1
  [ %third.ptr ]
  %second.ptr: ptr<Number> = alloc Number
  [ %second.ptr %third.ptr ]
  %4: i32 = const 42
  [ %second.ptr %third.ptr %4 ]
  %5: Number = struct { Number.value: %4, Number.next: %third.ptr }
  [ %second.ptr %third.ptr %4 ]
  %6: ptr<i32> = offset %second.ptr Number.value
  [ %second.ptr %third.ptr %6 %4 ]
  store %6 %4
  [ %second.ptr %third.ptr ]
  %7: ptr<ptr<Number>> = offset %second.ptr Number.next
  [ %second.ptr %7 %third.ptr ]
  store %7 %third.ptr
  [ %second.ptr ]
  %first.ptr: ptr<Number> = alloc Number
  [ %first.ptr %second.ptr ]
  %8: i32 = const 41
  [ %first.ptr %second.ptr %8 ]
  %9: Number = struct { Number.value: %8, Number.next: %second.ptr }
  [ %first.ptr %second.ptr %8 ]
  %10: ptr<i32> = offset %first.ptr Number.value
  [ %first.ptr %second.ptr %10 %8 ]
  store %10 %8
  [ %first.ptr %second.ptr ]
  %11: ptr<ptr<Number>> = offset %first.ptr Number.next
  [ %first.ptr %11 %second.ptr ]
  store %11 %second.ptr
  [ %first.ptr ]
  %second_value.ptr: ptr<i32> = alloc i32
  [ %second_value.ptr %first.ptr ]
  %12: ptr<ptr<Number>> = offset %first.ptr Number.next
  [ %second_value.ptr %first.ptr %12 ]
  %13: ptr<Number> = load %12
  [ %second_value.ptr %first.ptr %13 ]
  %14: ptr<i32> = offset %13 Number.value
  [ %second_value.ptr %first.ptr %14 ]
  %15: i32 = load %14
  [ %second_value.ptr %first.ptr %15 ]
  store %second_value.ptr %15
  [ %second_value.ptr %first.ptr ]
  %second_value_ref.ptr: ptr<ptr<i32>> = alloc ptr<i32>
  [ %second_value.ptr %second_value_ref.ptr %first.ptr ]
  %16: ptr<ptr<Number>> = offset %first.ptr Number.next
  [ %second_value.ptr %second_value_ref.ptr %16 ]
  %17: ptr<Number> = load %16
  [ %second_value.ptr %second_value_ref.ptr %17 ]
  %18: ptr<i32> = offset %17 Number.value
  [ %second_value.ptr %second_value_ref.ptr %18 ]
  store %second_value_ref.ptr %18
  [ %second_value.ptr %second_value_ref.ptr ]
  %second_value.1: i32 = load %second_value.ptr
  [ %second_value.1 %second_value_ref.ptr ]
  %19: i32 = const 42
  [ %second_value.1 %19 %second_value_ref.ptr ]
  %20: bool = cmp_ne %second_value.1 %19
  [ %20 %second_value_ref.ptr ]
  br %20 @2 @3
  [ %second_value_ref.ptr ]
@2:
  [ ]
  %21: i32 = const 1
  [ %21 ]
  ret %21
  [ ]
@3:
  [ %second_value_ref.ptr ]
  %second_value_ref.1: ptr<i32> = load %second_value_ref.ptr
  [ %second_value_ref.1 ]
  %22: i32 = load %second_value_ref.1
  [ %22 ]
  %23: i32 = const 42
  [ %22 %23 ]
  %24: bool = cmp_ne %22 %23
  [ %24 ]
  br %24 @4 @5
  [ ]
@4:
  [ ]
  %25: i32 = const 2
  [ %25 ]
  ret %25
  [ ]
@5:
  [ ]
  %26: i32 = const 0
  [ %26 ]
  ret %26
  [ ]
}
