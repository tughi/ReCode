type Point = struct {
  x: i32
  y: i32
}

$main(): i32 {
@1:
  [ ]
  %point.ptr: ptr<Point> = alloc Point
  [ %point.ptr ]
  %1: i32 = const 16
  [ %point.ptr %1 ]
  %2: i32 = const 32
  [ %point.ptr %2 %1 ]
  %3: Point = struct { Point.x: %1, Point.y: %2 }
  [ %point.ptr %2 %1 ]
  %4: ptr<i32> = offset %point.ptr Point.x
  [ %point.ptr %2 %4 %1 ]
  store %4 %1
  [ %point.ptr %2 ]
  %5: ptr<i32> = offset %point.ptr Point.y
  [ %point.ptr %5 %2 ]
  store %5 %2
  [ %point.ptr ]
  %6: i32 = call $get_y %point.ptr
  [ %6 ]
  %7: i32 = const 32
  [ %6 %7 ]
  %8: i32 = sub %6 %7
  [ %8 ]
  ret %8
  [ ]
}

$get_y(%point: ptr<Point>): i32 {
@1:
  [ %point ]
  %point.ptr: ptr<ptr<Point>> = alloc ptr<Point>
  [ %point.ptr %point ]
  store %point.ptr %point
  [ %point.ptr ]
  %1: ptr<Point> = load %point.ptr
  [ %1 ]
  %2: ptr<i32> = offset %1 Point.y
  [ %2 ]
  %3: i32 = load %2
  [ %3 ]
  ret %3
  [ ]
}
