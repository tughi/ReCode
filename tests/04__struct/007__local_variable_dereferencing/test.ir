type Line = struct {
  p1: Point
  p2: Point
}

type Point = struct {
  x: i32
  y: i32
}

$main(): i32 {
@1:
  [ ]
  %line.ptr: ptr<Line> = alloc Line
  [ %line.ptr ]
  %1: i32 = const 16
  [ %line.ptr %1 ]
  %2: i32 = const 32
  [ %line.ptr %2 %1 ]
  %3: Point = struct { Point.x: %1, Point.y: %2 }
  [ %line.ptr %2 %1 %3 ]
  %4: i32 = const 48
  [ %line.ptr %4 %2 %1 %3 ]
  %5: i32 = const 64
  [ %line.ptr %5 %4 %2 %1 %3 ]
  %6: Point = struct { Point.x: %4, Point.y: %5 }
  [ %line.ptr %5 %4 %2 %1 %3 %6 ]
  %7: Line = struct { Line.p1: %3, Line.p2: %6 }
  [ %line.ptr %5 %4 %2 %1 ]
  %8: ptr<Point> = offset %line.ptr Line.p1
  [ %line.ptr %5 %4 %2 %8 %1 ]
  %9: ptr<i32> = offset %8 Point.x
  [ %line.ptr %5 %4 %2 %8 %9 %1 ]
  store %9 %1
  [ %line.ptr %5 %4 %2 %8 ]
  %10: ptr<i32> = offset %8 Point.y
  [ %line.ptr %5 %4 %10 %2 ]
  store %10 %2
  [ %line.ptr %5 %4 ]
  %11: ptr<Point> = offset %line.ptr Line.p2
  [ %line.ptr %5 %11 %4 ]
  %12: ptr<i32> = offset %11 Point.x
  [ %line.ptr %5 %11 %12 %4 ]
  store %12 %4
  [ %line.ptr %5 %11 ]
  %13: ptr<i32> = offset %11 Point.y
  [ %line.ptr %13 %5 ]
  store %13 %5
  [ %line.ptr ]
  %line_reference.ptr: ptr<ptr<Line>> = alloc ptr<Line>
  [ %line_reference.ptr %line.ptr ]
  store %line_reference.ptr %line.ptr
  [ %line_reference.ptr ]
  %14: ptr<Line> = load %line_reference.ptr
  [ %14 ]
  %15: ptr<Point> = offset %14 Line.p2
  [ %15 ]
  %16: ptr<i32> = offset %15 Point.y
  [ %16 ]
  %17: i32 = load %16
  [ %17 ]
  %18: i32 = const 64
  [ %17 %18 ]
  %19: i32 = sub %17 %18
  [ %19 ]
  ret %19
  [ ]
}
