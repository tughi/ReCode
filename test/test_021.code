\ Struct support

Char :: struct {
    as_string: @Int8
    as_int8: Int8
    as_int16: Int16
    as_int32: Int32
    as_int64: Int64
    as_int: Int
}

Char :: (value: Int8) -> @Char {
    char: @Char
    char = new Char
    char.as_int8 = value
    char.as_int16 = value as Int16
    char.as_int32 = value as Int32
    char.as_int64 = value as Int64
    char.as_int = value as Int
    char.as_string = new Int8
    [char.as_string] = value
    return char
}

main :: () -> Int {
    char: @Char
    char = Char('*')
    if (char.as_int8 != '*') {
        return 1
    }
    if (char.as_int16 as Int != 42) {
        return 2
    }
    if (char.as_int32 as Int != 42) {
        return 3
    }
    if (char.as_int64 as Int != 42) {
        return 4
    }
    if (char.as_string[0] != '*') {
        return 5
    }
    return 0
}
